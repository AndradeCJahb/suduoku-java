{"ast":null,"code":"import React,{useState,useEffect}from'react';import ReactDOM from'react-dom/client';import'./index.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function PermHeader(){return/*#__PURE__*/_jsx(\"h1\",{className:\"PermHeader\",children:\"Suduoku\"});}function Cell(_ref){let{value,onChange}=_ref;const handleChange=event=>{const inputValue=event.target.value.slice(-1);// Get the last character entered\nif(/^[1-9]?$/.test(inputValue)){onChange(inputValue);// Notify parent of the change\n}};return/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:value,onChange:handleChange,className:\"cell\",maxLength:\"2\"// Limit input to a single character\n});}function ThreeGrid(_ref2){let{gridData,onCellChange,rowOffset,colOffset}=_ref2;return/*#__PURE__*/_jsx(\"div\",{className:\"threeGrid\",children:gridData.map((row,rowIndex)=>/*#__PURE__*/_jsx(\"div\",{className:\"grid-row\",children:row.map((cell,colIndex)=>/*#__PURE__*/_jsx(Cell,{value:cell,onChange:value=>onCellChange(rowOffset+rowIndex,colOffset+colIndex,value)},colIndex))},rowIndex))});}function FinalGrid(_ref3){let{gridData,onCellChange}=_ref3;return/*#__PURE__*/_jsx(\"div\",{className:\"finalGrid\",children:Array.from({length:3},(_,gridRow)=>/*#__PURE__*/_jsx(\"div\",{className:\"grid-row\",children:Array.from({length:3},(_,gridCol)=>/*#__PURE__*/_jsx(ThreeGrid,{gridData:gridData.slice(gridRow*3,gridRow*3+3).map(row=>row.slice(gridCol*3,gridCol*3+3)),onCellChange:onCellChange,rowOffset:gridRow*3,colOffset:gridCol*3},gridCol))},gridRow))});}function App(){const[gridData,setGridData]=useState(Array(9).fill(Array(9).fill(''))// Initialize empty 9x9 grid\n);useEffect(()=>{const ws=new WebSocket('ws://localhost:8080');// Connect to the backend WebSocket server\nws.onopen=()=>{console.log('Connected to WebSocket server');};ws.onmessage=event=>{const data=JSON.parse(event.data);if(data.type==='update'){setGridData(data.board);// Update the grid with the new state from the server\n}};ws.onclose=()=>{console.log('Disconnected from WebSocket server');};return()=>ws.close();// Clean up WebSocket connection on unmount\n},[]);const handleCellChange=(row,col,value)=>{const newGrid=gridData.map((r,rowIndex)=>r.map((cell,colIndex)=>rowIndex===row&&colIndex===col?value:cell));setGridData(newGrid);// Send the updated grid to the server\nconst ws=new WebSocket('ws://localhost:8080');ws.onopen=()=>{ws.send(JSON.stringify({type:'update',board:newGrid}));};};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(PermHeader,{}),/*#__PURE__*/_jsx(FinalGrid,{gridData:gridData,onCellChange:handleCellChange})]});}const root=ReactDOM.createRoot(document.getElementById('root'));root.render(/*#__PURE__*/_jsx(React.StrictMode,{children:/*#__PURE__*/_jsx(App,{})}));","map":{"version":3,"names":["React","useState","useEffect","ReactDOM","jsx","_jsx","jsxs","_jsxs","PermHeader","className","children","Cell","_ref","value","onChange","handleChange","event","inputValue","target","slice","test","type","maxLength","ThreeGrid","_ref2","gridData","onCellChange","rowOffset","colOffset","map","row","rowIndex","cell","colIndex","FinalGrid","_ref3","Array","from","length","_","gridRow","gridCol","App","setGridData","fill","ws","WebSocket","onopen","console","log","onmessage","data","JSON","parse","board","onclose","close","handleCellChange","col","newGrid","r","send","stringify","root","createRoot","document","getElementById","render","StrictMode"],"sources":["C:/Users/andra/Desktop/Projects/sudoku/suduoku/frontend/src/index.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\n\nfunction PermHeader() {\n  return <h1 className=\"PermHeader\">Suduoku</h1>;\n}\n\nfunction Cell({ value, onChange }) {\n  const handleChange = (event) => {\n    const inputValue = event.target.value.slice(-1); // Get the last character entered\n    if (/^[1-9]?$/.test(inputValue)) {\n      onChange(inputValue); // Notify parent of the change\n    }\n  };\n\n  return (\n    <input\n      type=\"text\"\n      value={value}\n      onChange={handleChange}\n      className=\"cell\"\n      maxLength=\"2\" // Limit input to a single character\n    />\n  );\n}\n\nfunction ThreeGrid({ gridData, onCellChange, rowOffset, colOffset }) {\n  return (\n    <div className=\"threeGrid\">\n      {gridData.map((row, rowIndex) => (\n        <div key={rowIndex} className=\"grid-row\">\n          {row.map((cell, colIndex) => (\n            <Cell\n              key={colIndex}\n              value={cell}\n              onChange={(value) =>\n                onCellChange(rowOffset + rowIndex, colOffset + colIndex, value)\n              }\n            />\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n}\n\nfunction FinalGrid({ gridData, onCellChange }) {\n  return (\n    <div className=\"finalGrid\">\n      {Array.from({ length: 3 }, (_, gridRow) => (\n        <div key={gridRow} className=\"grid-row\">\n          {Array.from({ length: 3 }, (_, gridCol) => (\n            <ThreeGrid\n              key={gridCol}\n              gridData={gridData.slice(gridRow * 3, gridRow * 3 + 3).map((row) =>\n                row.slice(gridCol * 3, gridCol * 3 + 3)\n              )}\n              onCellChange={onCellChange}\n              rowOffset={gridRow * 3}\n              colOffset={gridCol * 3}\n            />\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n}\n\nfunction App() {\n  const [gridData, setGridData] = useState(\n    Array(9).fill(Array(9).fill('')) // Initialize empty 9x9 grid\n  );\n\n  useEffect(() => {\n    const ws = new WebSocket('ws://localhost:8080'); // Connect to the backend WebSocket server\n\n    ws.onopen = () => {\n      console.log('Connected to WebSocket server');\n    };\n\n    ws.onmessage = (event) => {\n      const data = JSON.parse(event.data);\n      if (data.type === 'update') {\n        setGridData(data.board); // Update the grid with the new state from the server\n      }\n    };\n\n    ws.onclose = () => {\n      console.log('Disconnected from WebSocket server');\n    };\n\n    return () => ws.close(); // Clean up WebSocket connection on unmount\n  }, []);\n\n  const handleCellChange = (row, col, value) => {\n    const newGrid = gridData.map((r, rowIndex) =>\n      r.map((cell, colIndex) =>\n        rowIndex === row && colIndex === col ? value : cell\n      )\n    );\n    setGridData(newGrid);\n\n    // Send the updated grid to the server\n    const ws = new WebSocket('ws://localhost:8080');\n    ws.onopen = () => {\n      ws.send(JSON.stringify({ type: 'update', board: newGrid }));\n    };\n  };\n\n  return (\n    <div>\n      <PermHeader />\n      <FinalGrid gridData={gridData} onCellChange={handleCellChange} />\n    </div>\n  );\n}\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}