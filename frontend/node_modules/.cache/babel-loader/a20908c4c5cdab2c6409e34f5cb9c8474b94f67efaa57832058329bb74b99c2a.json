{"ast":null,"code":"class WebSocketManager{constructor(){this.ws=null;this.listeners=[];this.errorListeners=[];this.messageQueue=[];// Add a queue for messages\nthis.isConnected=false;// Track connection state\n}connect(url){if(!this.ws||this.ws.readyState===WebSocket.CLOSED){console.log('Attempting to connect to WebSocket server...');this.ws=new WebSocket(url);this.ws.onopen=()=>{console.log('Connected to WebSocket server');this.isConnected=true;// Process any queued messages\nwhile(this.messageQueue.length>0){const message=this.messageQueue.shift();this.sendImmediately(message);}};this.ws.onmessage=event=>{try{const data=JSON.parse(event.data);this.listeners.forEach(listener=>listener(data));}catch(error){console.error('Error parsing message:',error);}};this.ws.onerror=error=>{console.error('WebSocket error:',error);this.isConnected=false;this.errorListeners.forEach(listener=>listener(error));};this.ws.onclose=()=>{console.log('WebSocket connection closed');this.isConnected=false;// Attempt to reconnect\nsetTimeout(()=>this.connect(url),3000);};}}sendImmediately(message){if(this.ws&&this.ws.readyState===WebSocket.OPEN){const messageString=JSON.stringify(message);this.ws.send(messageString);return true;}return false;}send(message){if(this.isConnected&&this.sendImmediately(message)){return true;}else{this.messageQueue.push(message);return false;}}addListener(listener){this.listeners.push(listener);}removeListener(listener){this.listeners=this.listeners.filter(l=>l!==listener);}}const webSocketManager=new WebSocketManager();export default webSocketManager;","map":{"version":3,"names":["WebSocketManager","constructor","ws","listeners","errorListeners","messageQueue","isConnected","connect","url","readyState","WebSocket","CLOSED","console","log","onopen","length","message","shift","sendImmediately","onmessage","event","data","JSON","parse","forEach","listener","error","onerror","onclose","setTimeout","OPEN","messageString","stringify","send","push","addListener","removeListener","filter","l","webSocketManager"],"sources":["C:/Users/andra/Desktop/Projects/suduoku-java/frontend/src/components/WebSocketManager.js"],"sourcesContent":["class WebSocketManager {\r\n    constructor() {\r\n      this.ws = null;\r\n      this.listeners = [];\r\n      this.errorListeners = []; \r\n      this.messageQueue = []; // Add a queue for messages\r\n      this.isConnected = false; // Track connection state\r\n    }\r\n  \r\n    connect(url) {\r\n      if (!this.ws || this.ws.readyState === WebSocket.CLOSED) {\r\n        console.log('Attempting to connect to WebSocket server...');\r\n        this.ws = new WebSocket(url);\r\n  \r\n        this.ws.onopen = () => {\r\n          console.log('Connected to WebSocket server');\r\n          this.isConnected = true;\r\n          \r\n          // Process any queued messages\r\n          while (this.messageQueue.length > 0) {\r\n            const message = this.messageQueue.shift();\r\n            this.sendImmediately(message);\r\n          }\r\n        };\r\n  \r\n        this.ws.onmessage = (event) => {\r\n          try {\r\n            const data = JSON.parse(event.data);\r\n            this.listeners.forEach((listener) => listener(data));\r\n          } catch (error) {\r\n            console.error('Error parsing message:', error);\r\n          }\r\n        };\r\n  \r\n        this.ws.onerror = (error) => {\r\n          console.error('WebSocket error:', error);\r\n          this.isConnected = false;\r\n          this.errorListeners.forEach(listener => listener(error));\r\n        };\r\n  \r\n        this.ws.onclose = () => {\r\n          console.log('WebSocket connection closed');\r\n          this.isConnected = false;\r\n          // Attempt to reconnect\r\n          setTimeout(() => this.connect(url), 3000);\r\n        };\r\n      }\r\n    }\r\n  \r\n    sendImmediately(message) {\r\n      if (this.ws && this.ws.readyState === WebSocket.OPEN) {\r\n        const messageString = JSON.stringify(message);\r\n        this.ws.send(messageString);\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n  \r\n    send(message) {\r\n      if (this.isConnected && this.sendImmediately(message)) {\r\n        return true;\r\n      } else {\r\n        this.messageQueue.push(message);\r\n        return false;\r\n      }\r\n    }\r\n  \r\n    addListener(listener) {\r\n      this.listeners.push(listener);\r\n    }\r\n  \r\n    removeListener(listener) {\r\n      this.listeners = this.listeners.filter((l) => l !== listener);\r\n    }\r\n  }\r\n  \r\n  const webSocketManager = new WebSocketManager();\r\n  export default webSocketManager;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}