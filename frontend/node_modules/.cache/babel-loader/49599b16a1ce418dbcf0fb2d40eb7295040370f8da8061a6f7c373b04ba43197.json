{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useNavigate}from'react-router-dom';import Header from'./Header';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function PuzzleSelection(){const[puzzles,setPuzzles]=useState([]);const[loading,setLoading]=useState(true);const navigate=useNavigate();useEffect(()=>{// Fetch puzzles from your backend\nfetch('http://localhost:8080/puzzles').then(response=>response.json()).then(data=>{setPuzzles(data);setLoading(false);}).catch(err=>{console.error('Error fetching puzzles:',err);setLoading(false);});},[]);const handlePuzzleSelect=puzzleId=>{navigate(`/puzzle/${puzzleId}`);};if(loading){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:/*#__PURE__*/_jsx(\"h2\",{children:\"Loading puzzles...\"})})]});}return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"puzzle-grid\",children:puzzles.map(puzzle=>/*#__PURE__*/_jsxs(\"div\",{className:\"puzzle-card\",onClick:()=>handlePuzzleSelect(puzzle.id),children:[/*#__PURE__*/_jsx(\"h3\",{children:puzzle.title}),/*#__PURE__*/_jsxs(\"div\",{className:\"puzzle-meta\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"difficulty\",children:puzzle.difficulty||'Medium'}),/*#__PURE__*/_jsx(\"span\",{className:\"status\",children:puzzle.status||'New'})]})]},puzzle.id))})})]});}export default PuzzleSelection;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","Header","jsx","_jsx","jsxs","_jsxs","PuzzleSelection","puzzles","setPuzzles","loading","setLoading","navigate","fetch","then","response","json","data","catch","err","console","error","handlePuzzleSelect","puzzleId","children","className","map","puzzle","onClick","id","title","difficulty","status"],"sources":["C:/Users/andra/Desktop/Projects/sudoku/suduoku/frontend/src/components/PuzzleSelection.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Header from './Header';\r\n\r\nfunction PuzzleSelection() {\r\n  const [puzzles, setPuzzles] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const navigate = useNavigate();\r\n  \r\n  useEffect(() => {\r\n    // Fetch puzzles from your backend\r\n    fetch('http://localhost:8080/puzzles')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        setPuzzles(data);\r\n        setLoading(false);\r\n      })\r\n      .catch(err => {\r\n        console.error('Error fetching puzzles:', err);\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  const handlePuzzleSelect = (puzzleId) => {\r\n    navigate(`/puzzle/${puzzleId}`);\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <div className=\"container\">\r\n          <h2>Loading puzzles...</h2>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <div className=\"container\">        \r\n        <div className=\"puzzle-grid\">\r\n          {puzzles.map(puzzle => (\r\n            <div \r\n              key={puzzle.id} \r\n              className=\"puzzle-card\"\r\n              onClick={() => handlePuzzleSelect(puzzle.id)}\r\n            >\r\n              <h3>{puzzle.title}</h3>\r\n              <div className=\"puzzle-meta\">\r\n                <span className=\"difficulty\">{puzzle.difficulty || 'Medium'}</span>\r\n                <span className=\"status\">{puzzle.status || 'New'}</span>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PuzzleSelection;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,MAAO,CAAAC,MAAM,KAAM,UAAU,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE9B,QAAS,CAAAC,eAAeA,CAAA,CAAG,CACzB,KAAM,CAACC,OAAO,CAAEC,UAAU,CAAC,CAAGV,QAAQ,CAAC,EAAE,CAAC,CAC1C,KAAM,CAACW,OAAO,CAAEC,UAAU,CAAC,CAAGZ,QAAQ,CAAC,IAAI,CAAC,CAC5C,KAAM,CAAAa,QAAQ,CAAGX,WAAW,CAAC,CAAC,CAE9BD,SAAS,CAAC,IAAM,CACd;AACAa,KAAK,CAAC,+BAA+B,CAAC,CACnCC,IAAI,CAACC,QAAQ,EAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,EAAI,CACZR,UAAU,CAACQ,IAAI,CAAC,CAChBN,UAAU,CAAC,KAAK,CAAC,CACnB,CAAC,CAAC,CACDO,KAAK,CAACC,GAAG,EAAI,CACZC,OAAO,CAACC,KAAK,CAAC,yBAAyB,CAAEF,GAAG,CAAC,CAC7CR,UAAU,CAAC,KAAK,CAAC,CACnB,CAAC,CAAC,CACN,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAW,kBAAkB,CAAIC,QAAQ,EAAK,CACvCX,QAAQ,CAAC,WAAWW,QAAQ,EAAE,CAAC,CACjC,CAAC,CAED,GAAIb,OAAO,CAAE,CACX,mBACEJ,KAAA,QAAAkB,QAAA,eACEpB,IAAA,CAACF,MAAM,GAAE,CAAC,cACVE,IAAA,QAAKqB,SAAS,CAAC,WAAW,CAAAD,QAAA,cACxBpB,IAAA,OAAAoB,QAAA,CAAI,oBAAkB,CAAI,CAAC,CACxB,CAAC,EACH,CAAC,CAEV,CAEA,mBACElB,KAAA,QAAAkB,QAAA,eACEpB,IAAA,CAACF,MAAM,GAAE,CAAC,cACVE,IAAA,QAAKqB,SAAS,CAAC,WAAW,CAAAD,QAAA,cACxBpB,IAAA,QAAKqB,SAAS,CAAC,aAAa,CAAAD,QAAA,CACzBhB,OAAO,CAACkB,GAAG,CAACC,MAAM,eACjBrB,KAAA,QAEEmB,SAAS,CAAC,aAAa,CACvBG,OAAO,CAAEA,CAAA,GAAMN,kBAAkB,CAACK,MAAM,CAACE,EAAE,CAAE,CAAAL,QAAA,eAE7CpB,IAAA,OAAAoB,QAAA,CAAKG,MAAM,CAACG,KAAK,CAAK,CAAC,cACvBxB,KAAA,QAAKmB,SAAS,CAAC,aAAa,CAAAD,QAAA,eAC1BpB,IAAA,SAAMqB,SAAS,CAAC,YAAY,CAAAD,QAAA,CAAEG,MAAM,CAACI,UAAU,EAAI,QAAQ,CAAO,CAAC,cACnE3B,IAAA,SAAMqB,SAAS,CAAC,QAAQ,CAAAD,QAAA,CAAEG,MAAM,CAACK,MAAM,EAAI,KAAK,CAAO,CAAC,EACrD,CAAC,GARDL,MAAM,CAACE,EAST,CACN,CAAC,CACC,CAAC,CACH,CAAC,EACH,CAAC,CAEV,CAEA,cAAe,CAAAtB,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}