{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\andra\\\\Desktop\\\\Projects\\\\sudoku\\\\suduoku\\\\src\\\\index.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PermHeader() {\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    className: \"PermHeader\",\n    children: \"Suduoku\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 10\n  }, this);\n}\n_c = PermHeader;\nfunction Cell() {\n  _s();\n  const [value, setValue] = useState('');\n  const handleChange = event => {\n    const inputValue = event.target.value;\n    if (/^[1-9]?$/.test(inputValue)) {\n      setValue(inputValue);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    type: \"text\",\n    value: value,\n    onChange: handleChange,\n    className: \"cell\",\n    maxLength: \"1\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(Cell, \"A2PXPeq8TepW328gUMM4+o8Xryo=\");\n_c2 = Cell;\nfunction ThreeGrid() {\n  const Threegrid = Array.from({\n    length: 3\n  }, (_, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid-row\",\n    children: Array.from({\n      length: 3\n    }, (_, colIndex) => /*#__PURE__*/_jsxDEV(Cell, {}, colIndex, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this))\n  }, rowIndex, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ThreeGrid\",\n    children: ThreeGrid\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 10\n  }, this);\n}\n_c3 = ThreeGrid;\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(/*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: [/*#__PURE__*/_jsxDEV(PermHeader, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(ThreeGrid, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 48,\n  columnNumber: 3\n}, this));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"PermHeader\");\n$RefreshReg$(_c2, \"Cell\");\n$RefreshReg$(_c3, \"ThreeGrid\");","map":{"version":3,"names":["React","ReactDOM","App","reportWebVitals","useState","jsxDEV","_jsxDEV","PermHeader","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Cell","_s","value","setValue","handleChange","event","inputValue","target","test","type","onChange","maxLength","_c2","ThreeGrid","Threegrid","Array","from","length","_","rowIndex","colIndex","_c3","root","createRoot","document","getElementById","render","StrictMode","$RefreshReg$"],"sources":["C:/Users/andra/Desktop/Projects/sudoku/suduoku/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { useState } from 'react';\n\nfunction PermHeader() {\n  return <h1 className=\"PermHeader\">Suduoku</h1>;\n}\n\nfunction Cell() {\n  const [value, setValue] = useState('');\n\n  const handleChange = (event) => {\n    const inputValue = event.target.value;\n    if (/^[1-9]?$/.test(inputValue)) {\n      setValue(inputValue);\n    }\n  };\n\n  return (\n    <input\n      type=\"text\"\n      value={value}\n      onChange={handleChange}\n      className=\"cell\"\n      maxLength=\"1\"\n    />\n  );\n}\n\nfunction ThreeGrid() {\n  const Threegrid = Array.from({ length: 3 }, (_, rowIndex) => (\n    <div key={rowIndex} className=\"grid-row\">\n      {Array.from({ length: 3 }, (_, colIndex) => (\n        <Cell key={colIndex} />\n      ))}\n    </div>\n  ));\n\n  return <div className=\"ThreeGrid\">{ThreeGrid}</div>;\n}\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <PermHeader />\n    <ThreeGrid />\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}