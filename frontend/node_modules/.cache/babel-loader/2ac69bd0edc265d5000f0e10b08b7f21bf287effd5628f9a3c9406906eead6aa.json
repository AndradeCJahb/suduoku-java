{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\andra\\\\Desktop\\\\Projects\\\\suduoku-java\\\\frontend\\\\src\\\\components\\\\PlayerChat.js\";\nimport React from \"react\";\nimport webSocketManager from \"./WebSocketManager\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PlayerChat({\n  chatMessages,\n  chatInput,\n  setChatInput,\n  chatLogRef,\n  clientInfo,\n  players,\n  puzzleId\n}) {\n  const sendChatMessage = () => {\n    if (chatInput.trim() !== \"\") {\n      const message = {\n        user: clientInfo.name,\n        color: clientInfo.color,\n        text: chatInput,\n        puzzleId: puzzleId\n      };\n      webSocketManager.send({\n        type: \"sendChat\",\n        message\n      });\n      setChatInput(\"\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"right-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatBox\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatLog\",\n        ref: chatLogRef,\n        children: chatMessages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            style: {\n              color: msg.color || \"#000\"\n            },\n            children: [msg.user, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"message\",\n            children: msg.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"time\",\n            children: new Date(msg.time).toLocaleTimeString([], {\n              hour: \"2-digit\",\n              minute: \"2-digit\",\n              hour12: true\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatInput\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: chatInput,\n          onChange: e => setChatInput(e.target.value),\n          onKeyDown: e => {\n            if (e.key === \"Enter\") {\n              sendChatMessage();\n            }\n          },\n          placeholder: \"Type to chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"players-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"clientInfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"You are:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: clientInfo.color\n          },\n          children: [\" \", clientInfo.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"playerHeader\",\n        children: \"Connected Players:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"playerList\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: players.map((player, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            style: {\n              color: player.color\n            },\n            children: player.name\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n_c = PlayerChat;\nexport default PlayerChat;\nvar _c;\n$RefreshReg$(_c, \"PlayerChat\");","map":{"version":3,"names":["React","webSocketManager","jsxDEV","_jsxDEV","PlayerChat","chatMessages","chatInput","setChatInput","chatLogRef","clientInfo","players","puzzleId","sendChatMessage","trim","message","user","name","color","text","send","type","className","children","ref","map","msg","index","style","fileName","_jsxFileName","lineNumber","columnNumber","Date","time","toLocaleTimeString","hour","minute","hour12","value","onChange","e","target","onKeyDown","key","placeholder","player","_c","$RefreshReg$"],"sources":["C:/Users/andra/Desktop/Projects/suduoku-java/frontend/src/components/PlayerChat.js"],"sourcesContent":["import React from \"react\";\nimport webSocketManager from \"./WebSocketManager\";\n\nfunction PlayerChat({\n    chatMessages,\n    chatInput,\n    setChatInput,\n    chatLogRef,\n    clientInfo,\n    players,\n    puzzleId,\n}) {\n    const sendChatMessage = () => {\n        if (chatInput.trim() !== \"\") {\n            const message = {\n                user: clientInfo.name,\n                color: clientInfo.color,\n                text: chatInput,\n                puzzleId: puzzleId,\n            };\n\n            webSocketManager.send({ type: \"sendChat\", message });\n            setChatInput(\"\");\n        }\n    };\n\n    return (\n        <div className=\"right-section\">\n            <div className=\"chatBox\">\n                <div className=\"chatLog\" ref={chatLogRef}>\n                    {chatMessages.map((msg, index) => (\n                        <div key={index}>\n                            <strong style={{ color: msg.color || \"#000\" }}>\n                                {msg.user}:\n                            </strong>\n                            <span className=\"message\">{msg.message}</span>\n                            <span className=\"time\">\n                                {new Date(msg.time).toLocaleTimeString([], {\n                                    hour: \"2-digit\",\n                                    minute: \"2-digit\",\n                                    hour12: true,\n                                })}\n                            </span>\n                        </div>\n                    ))}\n                </div>\n\n                <div className=\"chatInput\">\n                    <input\n                        type=\"text\"\n                        value={chatInput}\n                        onChange={(e) => setChatInput(e.target.value)}\n                        onKeyDown={(e) => {\n                            if (e.key === \"Enter\") {\n                                sendChatMessage();\n                            }\n                        }}\n                        placeholder=\"Type to chat\"\n                    />\n                </div>\n            </div>\n\n            <div className=\"players-section\">\n                <div className=\"clientInfo\">\n                    <span>You are:</span>\n                    <span style={{ color: clientInfo.color }}>\n                        {\" \"}\n                        {clientInfo.name}\n                    </span>\n                </div>\n\n                <h3 className=\"playerHeader\">Connected Players:</h3>\n\n                <div className=\"playerList\">\n                    <ul>\n                        {players.map((player, index) => (\n                            <li key={index} style={{ color: player.color }}>\n                                {player.name}\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default PlayerChat;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}